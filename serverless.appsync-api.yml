name: appsyncmasterclassapi
schema: schema.api.graphql
authentication:
  type: AMAZON_COGNITO_USER_POOLS
  config:
    userPoolId: !Ref CognitoUserPool
    awsRegion: us-east-1
    defaultAction: ALLOW

resolvers:
  Query.getMyProfile:
    kind: UNIT
    dataSource: usersTable
    request: mapping-templates/Query.getMyProfile.request.vtl
    response: mapping-templates/Query.getMyProfile.response.vtl
  Query.getTweets:
    kind: UNIT
    dataSource: tweetsTable
    request: mapping-templates/Query.getTweets.request.vtl
    response: mapping-templates/Query.getTweets.response.vtl
  Query.getMyTimeline:
    kind: UNIT
    dataSource: timelinesTable
    request: mapping-templates/Query.getMyTimeline.request.vtl
    response: mapping-templates/Query.getMyTimeline.response.vtl
  Query.getLikes:
    kind: UNIT
    dataSource: timelinesTable
    request: mapping-templates/Query.getLikes.request.vtl
    response: mapping-templates/Query.getLikes.response.vtl
  Query.getImageUploadUrl:
    kind: UNIT
    dataSource: getImageUploadUrlFunction

  Mutation.editMyProfile:
    kind: UNIT
    dataSource: usersTable
    request: mapping-templates/Mutation.editMyProfile.request.vtl
    response: mapping-templates/Mutation.editMyProfile.response.vtl
  Mutation.like:
    kind: UNIT
    dataSource: likeMutation
    request: mapping-templates/Mutation.like.request.vtl
    response: mapping-templates/Mutation.like.response.vtl
  Mutation.unlike:
    kind: UNIT
    dataSource: unlikeMutation
    request: mapping-templates/Mutation.unlike.request.vtl
    response: mapping-templates/Mutation.unlike.response.vtl
  Mutation.tweet:
    kind: UNIT
    dataSource: tweetFunction
  Mutation.retweet:
    kind: UNIT
    dataSource: retweetFunction

  # NESTED RESOLVER
  Tweet.profile:
    kind: UNIT
    request: mapping-templates/Tweet.profile.request.vtl
    response: mapping-templates/Tweet.profile.response.vtl
    dataSource: usersTable
  Retweet.profile:
    kind: UNIT
    request: mapping-templates/Tweet.profile.request.vtl
    response: mapping-templates/Tweet.profile.response.vtl
    dataSource: usersTable
  Tweet.liked:
    kind: UNIT
    request: mapping-templates/Tweet.liked.request.vtl
    response: mapping-templates/Tweet.liked.response.vtl
    dataSource: likesTable
  Retweet.retweetOf:
    kind: UNIT
    request: mapping-templates/ReTweet.retweetOf.request.vtl
    response: mapping-templates/ReTweet.retweetOf.response.vtl
    dataSource: tweetsTable
  UnhydratedTweetsPage.tweets:
    kind: UNIT
    request: mapping-templates/UnhydratedTweetsPage.tweets.request.vtl
    response: mapping-templates/UnhydratedTweetsPage.tweets.response.vtl
    dataSource: tweetsTable
  MyProfile.tweets:
    kind: UNIT
    request: mapping-templates/MyProfile.tweets.request.vtl
    response: mapping-templates/MyProfile.tweets.response.vtl
    dataSource: tweetsTable
  OtherProfile.tweets:
    kind: UNIT
    request: mapping-templates/MyProfile.tweets.request.vtl
    response: mapping-templates/MyProfile.tweets.response.vtl
    dataSource: tweetsTable

dataSources:
  usersTable:
    type: AMAZON_DYNAMODB
    description: "Users table"
    config:
      tableName: !Ref UsersTable
  tweetsTable:
    type: AMAZON_DYNAMODB
    description: "Tweets table"
    config:
      tableName: !Ref TweetsTable
  likesTable:
    type: AMAZON_DYNAMODB
    description: "Likes table"
    config:
      tableName: !Ref LikesTable
  likeMutation:
    type: AMAZON_DYNAMODB
    description: "Like Mutation"
    config:
      tableName: !Ref LikesTable
      iamRoleStatements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
          Resource: !GetAtt LikesTable.Arn
        - Effect: Allow
          Action:
            - dynamodb:UpdateItem
          Resource:
            - !GetAtt UsersTable.Arn
            - !GetAtt TweetsTable.Arn
  unlikeMutation:
    type: AMAZON_DYNAMODB
    description: "Like Mutation"
    config:
      tableName: !Ref LikesTable
      iamRoleStatements:
        - Effect: Allow
          Action:
            - dynamodb:DeleteItem
          Resource: !GetAtt LikesTable.Arn
        - Effect: Allow
          Action:
            - dynamodb:UpdateItem
          Resource:
            - !GetAtt UsersTable.Arn
            - !GetAtt TweetsTable.Arn
  timelinesTable:
    type: AMAZON_DYNAMODB
    description: "Timelines table"
    config:
      tableName: !Ref TimelinesTable

  getImageUploadUrlFunction:
    type: AWS_LAMBDA
    config:
      functionName: getImageUploadUrl

  tweetFunction:
    type: AWS_LAMBDA
    config:
      functionName: tweet
  retweetFunction:
    type: AWS_LAMBDA
    config:
      functionName: retweet

substitutions: #global substitutions
  TweetsTable: !Ref TweetsTable
  UsersTable: !Ref UsersTable
  LikesTable: !Ref LikesTable
